buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

group = 'com.tentkeep'
def versionString = '0.2.0'

allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
}

apply plugin: 'idea'
apply plugin: 'spring-boot'

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:1.3.3.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.3.3.RELEASE'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

bintray {
    user = 'jwilkey'
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'BurrViews'
        name = 'burr-views'
        userOrg = 'jwilkey'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/jwilkey/burr-views.git'

        labels = ['spring boot', 'thymeleaf']
        version {
            name = versionString
            desc = 'Convenience classes for Java Spring Boot projects using Thymeleaf'
            released  = new Date()
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'com.tentkeep'
            artifactId 'burr-views'
            version versionString
            artifact sourcesJar {
                classifier 'sources'
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

test {
    systemProperties = System.properties
    testLogging {
        events "failed", "standardError"
    }
    afterTest { desc, result ->
        println "TESTED [${desc.className}] ${desc.name} ===${result.resultType}==="
    }
}

bootRun {
    systemProperties = System.properties
}

allprojects {
    springBoot {
        mainClass = "workaround.gradle.application.plugin.needs.main.class"
    }
}
